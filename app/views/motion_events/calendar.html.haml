.row
  .col-md-12
    - Camera.order( :name ).each do |camera|
      = link_to camera.name, calendar_motion_events_path( camera_id: camera.id )
      |

.row
  .col-md-12
    = timeline @camera_event_timeline, library: {groupByRowLabel: false, tooltip: { isHtml: true } }, height: "#{(Camera.count * 75)}px"

    :coffeescript
    
      load_timeline_handler = ->    
        chart = Chartkick.charts['chart-1']
    
        selectHandler = (e) ->
          selection = chart.getChartObject().getSelection()
          item = chart.dataSource[selection[0]['row']]
          console.log( item )
          
          window.location.href = "/motion_events/selected_from_timeline?camera=" + item[0] + "&occurred_at=" + item[1]

        google.visualization.events.addListener(chart.getChartObject(), 'select', selectHandler);

      setTimeout load_timeline_handler, 2000


.row
  .col-md-12.text-center
    %h3
      - if params[:camera_id].present?
        = Camera.find(params[:camera_id]).name
      - else
        All Cameras

.row
  .col-md-12

    %table.table

      %tr
        %th
          Day
        - (0..23).each do |h|
          %th
            = h

      - (0..7).each do |d|
        - t = d.days.ago.in_time_zone
        %tr
          %td
            = t.strftime("%a, %b %-d")
    
          - if params[:camera_id].present?
            - query = MotionEvent.group_by_period( :hour, :occurred_at, { time_zone: "Arizona", range: t.beginning_of_day..t.end_of_day } ).where( camera_id: params[:camera_id] ).count
          - else
            - query = MotionEvent.group_by_hour( :occurred_at, time_zone: "Arizona", range: t.beginning_of_day..t.end_of_day ).count
           
          - query.each do |k,v|
            %td
              = link_to v, motion_events_path( hour: k.to_i )        